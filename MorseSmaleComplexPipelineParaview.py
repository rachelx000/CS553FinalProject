# Reference: https://topology-tool-kit.github.io/examples/

from paraview.simple import *

# Import the PNG image into Paraview
# FileNames = /path-of-image/name.png
Image = PNGSeriesReader(FileNames=["/Users/rachelx000/Desktop/CS553FinalProject/data/emd_1654.png"])

# Compute the scalar field from the pixel magnitude field of the imported image
computeDerivatives1 = ComputeDerivatives(Input=Image)
computeDerivatives1.Scalars = ["POINTS", "PNGImage"]
cellDatatoPointData1 = CellDatatoPointData(Input=computeDerivatives1)
calculator1 = Calculator(Input=cellDatatoPointData1)
calculator1.ResultArrayName = "gradient"
calculator1.Function = "mag(ScalarGradient)"

# Calculate the persistence diagram for the scalar field
tTKPersistenceDiagram1 = TTKPersistenceDiagram(Input=calculator1)
tTKPersistenceDiagram1.ScalarField = ["POINTS", "gradient"]

# Extract the persistence data from the results of the persistence diagram
threshold1 = Threshold(Input=tTKPersistenceDiagram1)
threshold1.Scalars = ["CELLS", "PairIdentifier"]
threshold1.ThresholdMethod = "Between"
threshold1.LowerThreshold = 0.0
threshold1.UpperThreshold = 999999999

# Remove noises from the persistence data (ignore non-persistent features)
persistenceThreshold = Threshold(Input=threshold1)
persistenceThreshold.Scalars = ["CELLS", "Persistence"]
persistenceThreshold.ThresholdMethod = "Between"
persistenceThreshold.LowerThreshold = 10.0
persistenceThreshold.UpperThreshold = 999999999

# Extract the region of the scalar field with only the persistent features
tTKTopologicalSimplification1 = TTKTopologicalSimplification(
    Domain=calculator1,
    Constraints=persistenceThreshold,
)
tTKTopologicalSimplification1.ScalarField = ["POINTS", "gradient"]

# Compute the Morse Smale complex of this scalar field
tTKMorseSmaleComplex1 = TTKMorseSmaleComplex(Input=tTKTopologicalSimplification1)
tTKMorseSmaleComplex1.ScalarField = ["POINTS", "gradient"]

# Extract the computed critical points from the Morse Smale complex
criticalPoints = FindSource("TTKMorseSmaleComplex1__CriticalPoints")
extractSurface = ExtractSurface(Input=criticalPoints)
tTKIcospheresFromPoints1 = TTKIcospheresFromPoints(Input=tTKMorseSmaleComplex1)
tTKIcospheresFromPoints1.Radius = 1.0

# Extract edges between saddles and extrema (1-separatrices) from the Morse Smale complex
edgeThreshold = Threshold(Input=OutputPort(tTKMorseSmaleComplex1, 1))
edgeThreshold.Scalars = ["CELLS", "SeparatrixType"]
edgeThreshold.ThresholdMethod = "Between"
edgeThreshold.LowerThreshold = 1.0
edgeThreshold.UpperThreshold = 1.0

# Make the jagged lines generated by the Morse-Smale complex a little smoother
tTKGeometrySmoother1 = TTKGeometrySmoother(Input=edgeThreshold)
tTKGeometrySmoother1.IterationNumber = 50
cleantoGrid1 = CleantoGrid(Input=tTKGeometrySmoother1)
tetrahedralize1 = Tetrahedralize(Input=cleantoGrid1)
extractSurface1 = ExtractSurface(Input=tetrahedralize1)
tube1 = Tube(Input=extractSurface1)
tube1.Radius = 0.5
